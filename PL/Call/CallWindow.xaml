<Window x:Class="PL.Call.CallWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:PL.Converters"
        Title="Call Editor"
        Height="540" Width="877"
        Background="#E8F5E9">

    <Window.Resources>
        <converters:StatusToVisibilityConverter x:Key="StatusToVisibility"/>
        <converters:AssignedOnlyVisibilityConverter x:Key="AssignedOnlyVisibility"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
        <converters:StatusToGeneralEditabilityConverter x:Key="GeneralEditable"/>
        <converters:StatusToDeadlineEditabilityConverter x:Key="MaxTimeEditable"/>

        <!-- Label Style -->
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="#2E7D32"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!-- Input Control Style -->
        <Style x:Key="InputStyle" TargetType="Control">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#A5D6A7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="200"/>
        </Style>

        <!-- Button Style -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#A5D6A7"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="#81C784"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#81C784"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Height="540" Width="877">
        <Grid.Resources>
            <Style TargetType="Label">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Width" Value="150"/>
            </Style>
            <Style TargetType="Control" x:Key="InputStyle">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Width" Value="200"/>
                <Setter Property="Margin" Value="5"/>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- ID -->
            <RowDefinition Height="Auto"/>
            <!-- TypeOfCall -->
            <RowDefinition Height="Auto"/>
            <!-- VerbalDescription -->
            <RowDefinition Height="Auto"/>
            <!-- FullAddress -->
            <RowDefinition Height="Auto"/>
            <!-- MaxTimeToFinish -->
            <RowDefinition Height="Auto"/>
            <!-- OpenTime -->
            <RowDefinition Height="Auto"/>
            <!-- spacer -->
            <RowDefinition Height="Auto"/>
            <!-- Status -->
            <RowDefinition Height="Auto"/>
            <!-- Button -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- ID -->
        <Label Content="Id:" Grid.Row="0" Grid.Column="0" Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibility}}"/>
        <TextBox Text="{Binding CurrentCall.Id, Mode=TwoWay}"
                 Grid.Row="0" Grid.Column="1"
                 Style="{StaticResource InputStyle}"
                 IsReadOnly="{Binding IsUpdateMode}"
                 Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibility}}"/>

        <!-- TypeOfCall -->
        <Label Content="Type Of Call:" Grid.Row="1" Grid.Column="0"/>
        <ComboBox ItemsSource="{Binding Source={StaticResource TypeOfCallCollectionKey}}"
                  SelectedValue="{Binding CurrentCall.TypeOfCall}"
                  Grid.Row="1" Grid.Column="1"
                  Style="{StaticResource InputStyle}"
                  IsEnabled="{Binding CurrentCall.Status, Converter={StaticResource GeneralEditable}}"/>

        <!-- VerbalDescription -->
        <Label Content="Verbal Description:" Grid.Row="2" Grid.Column="0"/>
        <TextBox Grid.Row="2" Grid.Column="1"
                 Style="{StaticResource InputStyle}"
                 IsEnabled="{Binding CurrentCall.Status, Converter={StaticResource GeneralEditable}}">
            <TextBox.Text>
                <Binding Path="CurrentCall.VerbalDescription" Mode="TwoWay"
                         ValidatesOnExceptions="True" NotifyOnValidationError="True"
                         UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
        </TextBox>

        <!-- FullAddress -->
        <Label Content="Full Address:" Grid.Row="3" Grid.Column="0"/>
        <TextBox Grid.Row="3" Grid.Column="1"
                 Style="{StaticResource InputStyle}"
                 IsEnabled="{Binding CurrentCall.Status, Converter={StaticResource GeneralEditable}}">
            <TextBox.Text>
                <Binding Path="CurrentCall.FullAddress" Mode="TwoWay"
                         ValidatesOnExceptions="True" NotifyOnValidationError="True"
                         UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
        </TextBox>

        <!-- MaxTimeToFinish -->
        <Label Content="Max Time To Finish:" Grid.Row="4" Grid.Column="0"/>
        <TextBox Grid.Row="4" Grid.Column="1"
                 Style="{StaticResource InputStyle}"
                 IsEnabled="{Binding CurrentCall.Status, Converter={StaticResource MaxTimeEditable}}">
            <TextBox.Text>
                <Binding Path="CurrentCall.MaxTimeToFinish" Mode="TwoWay"
                         ValidatesOnExceptions="True" NotifyOnValidationError="True"
                         UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
        </TextBox>

        <!-- OpenTime -->
        <Label Content="Open Time:" Grid.Row="5" Grid.Column="0" Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibility}}"/>
        <TextBox Grid.Row="5" Grid.Column="1"
                 Style="{StaticResource InputStyle}"
                 Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibility}}"
                 IsReadOnly="True">
            <TextBox.Text>
                <Binding Path="CurrentCall.OpenTime" Mode="TwoWay"
                         ValidatesOnExceptions="True" NotifyOnValidationError="True"
                         UpdateSourceTrigger="PropertyChanged"/>
            </TextBox.Text>
        </TextBox>

        <!-- Status -->
        <Label Content="Status:" Grid.Row="7" Grid.Column="0" Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibility}}"/>
        <ComboBox ItemsSource="{Binding Source= {StaticResource StatusCollectionKey}}"
                  SelectedValue="{Binding CurrentCall.Status, Mode=TwoWay}"
                  Grid.Row="7" Grid.Column="1"
                  Style="{StaticResource InputStyle}"
                  Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibility}}"/>

        <!-- CallAssignInList -->
        <Label Content="Call Assign In List:"
               Grid.Column="2" Grid.ColumnSpan="2"
               Margin="132,0,0,0"
               HorizontalAlignment="Left"
               Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibility}}"/>

        <DataGrid Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Grid.RowSpan="5"
                  ItemsSource="{Binding CurrentCall.listOfCallAssign}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  Margin="5,5,9,5"
                  Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibility}}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Volunteer ID" Binding="{Binding VolunteerId}"/>
                <DataGridTextColumn Header="Name" Binding="{Binding VolunteerName}"/>
                <DataGridTextColumn Header="Entry Time" Binding="{Binding EntryTimeForTreatment}"/>
                <DataGridTextColumn Header="End Time" Binding="{Binding EndTimeOfTreatment}"/>
                <DataGridTextColumn Header="Type Of Treatment" Binding="{Binding TypeOfTreatment}"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Add/Update Button -->
        <Button Grid.Row="8" Grid.Column="1"
                Margin="145,34,0,-65"
                HorizontalAlignment="Left"
                Width="150"
                Content="{Binding ButtonText}"
                Click="btnAddUpdate_Click"
                Grid.ColumnSpan="2"/>
    </Grid>
</Window>