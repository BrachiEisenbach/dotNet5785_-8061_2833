<Window x:Class="PL.Vol.VolunteerWindowVol"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Vol"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:converters="clr-namespace:PL.Converters"
        xmlns:validation="clr-namespace:PL.Validation"
        mc:Ignorable="d"
        Title="Volunteer Details" Height="720" Width="1000"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">

    <Window.Resources>
        <converters:CanChooseCallConverter x:Key="CanChooseCallConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibility"/>
        <converters:IsNullToIsEnabledConverter x:Key="IsNullToIsEnabledConverter"/>
        <converters:BoolToVisibilityInverted x:Key="BoolToVisibilityInverted"/>

        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="1.5"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <GroupBox Header="Volunteer Information" Grid.Column="0" Margin="5">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="10">
                    <Label Content="Id"/>
                    <TextBox Text="{Binding CurrentVolunteer.Id}" IsEnabled="False" Width="200"/>

                    <Label Content="Full Name"/>
                    <TextBox Width="200">
                        <TextBox.Text>
                            <Binding Path="CurrentVolunteer.FullName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NameValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Label Content="Phone"/>
                    <TextBox Width="200">
                        <TextBox.Text>
                            <Binding Path="CurrentVolunteer.Phone" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:PhoneValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Label Content="Email"/>
                    <TextBox Width="200">
                        <TextBox.Text>
                            <Binding Path="CurrentVolunteer.Email" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:EmailValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Label Content="Password"/>
                    <TextBox Text="{Binding CurrentVolunteer.Password, Mode=TwoWay}" Width="200"/>

                    <Label Content="Full Address"/>
                    <TextBox Text="{Binding CurrentVolunteer.FullAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200"/>

                    <Label Content="Role"/>
                    <TextBox Text="{Binding CurrentVolunteer.Role}" IsEnabled="False" Width="200"/>

                    <Label Content="Max Distance"/>
                    <TextBox Width="200">
                        <TextBox.Text>
                            <Binding Path="CurrentVolunteer.MaxDistance" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:PositiveDoubleValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Label Content="Type Of Distance"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource TypeOfDistanceCollectionKey}}"
                              SelectedValue="{Binding CurrentVolunteer.TypeOfDistance, Mode=TwoWay}" Width="200"/>

                    <Label Content="Calls Treated"/>
                    <TextBox Text="{Binding CurrentVolunteer.AllCallsThatTreated}" IsReadOnly="True" Width="200"/>
                    <Label Content="Calls Canceled"/>
                    <TextBox Text="{Binding CurrentVolunteer.AllCallsThatCanceled}" IsReadOnly="True" Width="200"/>
                    <Label Content="Calls Expired"/>
                    <TextBox Text="{Binding CurrentVolunteer.AllCallsThatHaveExpired}" IsReadOnly="True" Width="200"/>

                    <Label Content="Active"/>
                    <CheckBox IsChecked="{Binding CurrentVolunteer.Active, Mode=TwoWay}" HorizontalAlignment="Left">
                        <CheckBox.IsEnabled>
                            <Binding Path="CurrentVolunteer.CallInTreate" Converter="{StaticResource IsNullToIsEnabledConverter}"/>
                        </CheckBox.IsEnabled>
                        <CheckBox.ToolTip>
                            <TextBlock Text="Cannot deactivate while treating a call." 
                                       Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVisibilityInverted}}"/>
                        </CheckBox.ToolTip>
                    </CheckBox>

                    <Label Content="Type Of Call (Preferred)"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource TypeOfCallCollectionKey}}"
                              SelectedValue="{Binding CurrentVolunteer.TypeOfCall, Mode=TwoWay}" Width="200"/>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>

        <GroupBox Header="Call In Progress" Grid.Column="1" Margin="5"
                  Visibility="{Binding CurrentVolunteer.CallInTreate, Converter={StaticResource NullToVisibility}}">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="10">
                    <Label Content="Call Id"/>
                    <TextBox Text="{Binding CurrentVolunteer.CallInTreate.CallId}" IsReadOnly="True" Width="200"/>
                    <Label Content="Verbal Description"/>
                    <TextBox Text="{Binding CurrentVolunteer.CallInTreate.VerbalDescription}" IsReadOnly="True" Width="200" TextWrapping="Wrap" Height="60"/>
                    <Label Content="Full Address"/>
                    <TextBox Text="{Binding CurrentVolunteer.CallInTreate.FullAddress}" IsReadOnly="True" Width="200"/>
                    <Label Content="Open Time"/>
                    <xctk:TimePicker Value="{Binding CurrentVolunteer.CallInTreate.OpenTime}" Format="Custom" FormatString="dd/MM/yyyy HH:mm" IsReadOnly="True" Width="200"/>
                    <Label Content="Max Time To Finish"/>
                    <xctk:TimePicker Value="{Binding CurrentVolunteer.CallInTreate.MaxTimeToFinish}" Format="Custom" FormatString="dd/MM/yyyy HH:mm" IsReadOnly="True" Width="200"/>
                    <Label Content="Enter Time"/>
                    <xctk:TimePicker Value="{Binding CurrentVolunteer.CallInTreate.EnterTime}" Format="Custom" FormatString="dd/MM/yyyy HH:mm" IsReadOnly="True" Width="200"/>
                    <Label Content="Distance"/>
                    <TextBox Text="{Binding CurrentVolunteer.CallInTreate.Distance, StringFormat={}{0:F2} km}" IsReadOnly="True" Width="200"/>
                    <Label Content="Status"/>
                    <TextBox Text="{Binding CurrentVolunteer.CallInTreate.Status}" IsReadOnly="True" Width="200"/>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
                        <Button Content="Finish Treatment" Click="btnFinishTreat_Click" Width="150" Margin="5"/>
                        <Button Content="Cancel Treatment" Click="btnCancelTreat_Click" Width="150" Margin="5"/>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>

        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,10">
            <Button Content="Update Details" Click="btnUpdate_Click" Width="150" Margin="5" FontWeight="Bold"/>
            <Button Content="Choose Call" Click="btnChooseCall_Click" Width="150" Margin="5">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource CanChooseCallConverter}">
                        <Binding Path="CurrentVolunteer.CallInTreate"/>
                        <Binding Path="CurrentVolunteer.Active"/>
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            <Button Content="Calls History" Click="btnHistory_click" Width="150" Margin="5"/>
        </StackPanel>
    </Grid>
</Window>