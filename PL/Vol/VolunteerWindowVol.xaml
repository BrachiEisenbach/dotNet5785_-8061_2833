<Window x:Class="PL.Vol.VolunteerWindowVol"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Vol"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:converters="clr-namespace:PL.Converters"
        xmlns:validation="clr-namespace:PL.Validation"
        mc:Ignorable="d"
        Title="Volunteer Details" Height="720" Width="1000"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">

    <Window.Resources>
        <converters:CanChooseCallConverter x:Key="CanChooseCallConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibility"/>
        <converters:IsNullToIsEnabledConverter x:Key="IsNullToIsEnabledConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityInverted"/>

            <!-- צבעים -->
            <Color x:Key="PrimaryGreenColor">#A5D6A7</Color>
            <Color x:Key="DarkGreenColor">#388E3C</Color>
            <Color x:Key="LightGreenBackground">#E8F5E9</Color>
            <Color x:Key="LightBorderColor">#C8E6C9</Color>

            <!-- מברשות -->
            <SolidColorBrush x:Key="PrimaryGreenBrush" Color="{StaticResource PrimaryGreenColor}"/>
            <SolidColorBrush x:Key="DarkGreenBrush" Color="{StaticResource DarkGreenColor}"/>
            <SolidColorBrush x:Key="LightGreenBackgroundBrush" Color="{StaticResource LightGreenBackground}"/>
            <SolidColorBrush x:Key="LightBorderBrush" Color="{StaticResource LightBorderColor}"/>

            <!-- רקע כללי -->
            <Style TargetType="Window">
                <Setter Property="Background" Value="{StaticResource LightGreenBackgroundBrush}"/>
            </Style>

            <!-- GroupBox -->
            <Style TargetType="GroupBox">
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource DarkGreenBrush}"/>
            </Style>

            <!-- Label -->
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{StaticResource DarkGreenBrush}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Normal"/>
            </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,2"/>
        </Style>

        <!-- ComboBox -->
            <Style TargetType="ComboBox">
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Padding" Value="3"/>
            </Style>

            <!-- CheckBox -->
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{StaticResource DarkGreenBrush}"/>
            </Style>

            <!-- Button -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryGreenBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkGreenBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Foreground" Value="LightGray"/>
                    <Setter Property="BorderBrush" Value="DarkGray"/>
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="171*" />
            <ColumnDefinition Width="319*"/>
            <ColumnDefinition Width="490*" />
        </Grid.ColumnDefinitions>

        <GroupBox Header="Volunteer Information" Grid.Column="0" Margin="5" Grid.ColumnSpan="2">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="10">

                    <!-- שורות עם Grid דו-עמודי -->
                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Id:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Text="{Binding CurrentVolunteer.Id}" IsEnabled="False" Grid.Column="1"/>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Full Name:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="CurrentVolunteer.FullName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:NameValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Phone:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="CurrentVolunteer.Phone" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:PhoneValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Email:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="CurrentVolunteer.Email" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:EmailValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Password:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Text="{Binding CurrentVolunteer.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"/>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Full Address:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Text="{Binding CurrentVolunteer.FullAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"/>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Role:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Text="{Binding CurrentVolunteer.Role}" IsEnabled="False" Grid.Column="1"/>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Max Distance:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Grid.Column="1">
                            <TextBox.Text>
                                <Binding Path="CurrentVolunteer.MaxDistance" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:PositiveDoubleValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Type Of Distance:" VerticalAlignment="Center" Grid.Column="0"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource TypeOfDistanceCollectionKey}}"
                                  SelectedValue="{Binding CurrentVolunteer.TypeOfDistance, Mode=TwoWay}" Grid.Column="1" Width="200"/>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Calls Treated:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Text="{Binding CurrentVolunteer.AllCallsThatTreated}" IsReadOnly="True" Grid.Column="1"/>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Calls Canceled:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Text="{Binding CurrentVolunteer.AllCallsThatCanceled}" IsReadOnly="True" Grid.Column="1"/>
                    </Grid>

                    <Grid Margin="0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Calls Expired:" VerticalAlignment="Center" Grid.Column="0"/>
                        <TextBox Text="{Binding CurrentVolunteer.AllCallsThatHaveExpired}" IsReadOnly="True" Grid.Column="1"/>
                    </Grid>

                    <Grid Margin="0,5" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Active:" VerticalAlignment="Center" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding CurrentVolunteer.Active, Mode=TwoWay}" HorizontalAlignment="Left" Grid.Column="1">
                            <CheckBox.IsEnabled>
                                <Binding Path="CurrentVolunteer.CallInTreate" Converter="{StaticResource IsNullToIsEnabledConverter}"/>
                            </CheckBox.IsEnabled>
                            <CheckBox.ToolTip>
                                <TextBlock Text="Cannot deactivate while treating a call."
                                           Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToVisibilityInverted}}"/>
                            </CheckBox.ToolTip>
                        </CheckBox>
                    </Grid>

                </StackPanel>
            </ScrollViewer>
        </GroupBox>

        <ContentControl Grid.Column="2" Margin="5" Content="{Binding CurrentVolunteer.CallInTreate}">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <GroupBox Header="Call In Progress">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <StackPanel Margin="10">
                                            <Label Content="Call Id"/>
                                            <TextBox Text="{Binding CallId}" IsReadOnly="True" Width="200"/>

                                            <Label Content="Verbal Description"/>
                                            <TextBox Text="{Binding VerbalDescription}" IsReadOnly="True" Width="200" TextWrapping="Wrap" Height="60"/>

                                            <Label Content="Full Address"/>
                                            <TextBox Text="{Binding FullAddress}" IsReadOnly="True" Width="200"/>

                                            <Label Content="Open Time"/>
                                            <xctk:TimePicker Value="{Binding OpenTime}" Format="Custom" FormatString="dd/MM/yyyy HH:mm" IsReadOnly="True" Width="200"/>

                                            <Label Content="Max Time To Finish"/>
                                            <xctk:TimePicker Value="{Binding MaxTimeToFinish}" Format="Custom" FormatString="dd/MM/yyyy HH:mm" IsReadOnly="True" Width="200"/>

                                            <Label Content="Enter Time"/>
                                            <xctk:TimePicker Value="{Binding EnterTime}" Format="Custom" FormatString="dd/MM/yyyy HH:mm" IsReadOnly="True" Width="200"/>

                                            <Label Content="Distance"/>
                                            <TextBox Text="{Binding Distance, StringFormat={}{0:F2} km}" IsReadOnly="True" Width="200"/>

                                            <Label Content="Status"/>
                                            <TextBox Text="{Binding Status}" IsReadOnly="True" Width="200"/>

                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
                                                <Button Content="Finish Treatment" Click="btnFinishTreat_Click" Width="150" Margin="5"/>
                                                <Button Content="Cancel Treatment" Click="btnCancelTreat_Click" Width="150" Margin="5"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </ScrollViewer>
                                </GroupBox>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentVolunteer.CallInTreate}" Value="{x:Null}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Border BorderBrush="#A5D6A7" BorderThickness="1" CornerRadius="10" Background="White" Padding="10">
                                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <TextBlock Text="There is no call in treatment now." 
                                                   FontSize="18" FontWeight="SemiBold" Foreground="#388E3C" 
                                                   HorizontalAlignment="Center" Margin="0,0,0,10"/>
                                                <TextBlock Text="You can choose a new call from the list." 
                                                   FontSize="14" Foreground="#757575" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>


        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left" Margin="79,10,0,10" Grid.Column="1">
            <Button Content="Update Details" Click="btnUpdate_Click" Width="150" Margin="5" FontWeight="Bold"/>
            <Button Content="Choose Call" Click="btnChooseCall_Click" Width="150" Margin="5">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource CanChooseCallConverter}">
                        <Binding Path="CurrentVolunteer.CallInTreate"/>
                        <Binding Path="CurrentVolunteer.Active"/>
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>

            <Button Content="Calls History" Click="btnHistory_click" Width="150" Margin="5"/>
        </StackPanel>
    </Grid>
</Window>
